@using digioz.Portal.Domain.Constants
@using digioz.Portal.Utilities
@model digioz.Portal.Web.Areas.Forum.ViewModels.ViewMemberViewModel
@{
    ViewBag.Title = string.Concat(Model.User.UserName, Html.LanguageString("Members.ProfileTitle"));
}

@section Header
{
    <script type="text/javascript">
        $(function () {
            $.post(app_base + "Members/GetMemberDiscussions",
                { "Id": '@Model.User.Id' },
                function (data) {
                    $(".memberdiscussions").html(data);
                });
            TimeBadges();
        });
            function TimeBadges() {
                var timeBadgeViewModel = new Object();
                timeBadgeViewModel.Id = '@Model.User.Id';
            var strung = JSON.stringify(timeBadgeViewModel);
            $.ajax({
                url: app_base + 'Badge/Time',
                type: 'POST',
                dataType: 'html',
                data: strung,
                contentType: 'application/json; charset=utf-8',
                success: function (data) {

                },
                error: function (xhr, ajaxOptions, thrownError) {
                    ShowUserMessage("Error: " + xhr.status + " " + thrownError);
                }
            });
        }
    </script>
}

@section side
{
    @Html.Action("ListCategorySideMenu", "Category")
    @Html.Action("SideSearch", "Search")
    @Html.Action("PopularTags", "Tag")
    @Html.Action("CurrentWeekHighPointUsers", "Point")
}

<div class="memberprofilepublic">

    <h2>@Model.User.UserName</h2>

    <div class="row">

        <div class="col-md-3 memberavatardetails">
            @{
                var avatar = Model.User.Profiles.First().Avatar;
                if (string.IsNullOrEmpty(avatar)) { avatar = "Default.png"; }
            }

            <p><img src="~/Content/Avatar/Thumb/@avatar" alt="@Model.User.UserName">
            </p>
            <p>@Html.LanguageString("Members.Profile.Joined") @Model.User.CreateDate.ToShortDateString()</p>
            <p>@Html.LanguageString("Members.Profile.Posts") @Model.User.Posts.Count</p>
            <p>@Html.LanguageString("Members.Profile.Points") @Model.User.TotalPoints</p>

            @if (User.Identity.IsAuthenticated && Model.User.UserName != User.Identity.Name)
            {
                <p><a href="@Url.Action("Create", "PrivateMessage", new {area = "Forum", to = Model.User.Id}, null)" class="btn">@Html.LanguageString("Members.MessageMe")</a></p>
            }

            @if (User.Identity.IsAuthenticated && Html.Settings().EnableMemberReporting && Model.User.Id != Model.LoggedOnUserId)
            {
                <p><a href="@Url.Action("Report", "Members", new {area = "Forum", id = Model.User.Id}, null)" class="btn">@Html.LanguageString("Buttons.Report")</a></p>
            }

            @if (User.IsInRole(AppConstants.AdminRoleName) || User.IsInRole(AppConstants.ModeratorRoleName))
            {
                // Show whether this is a social account or not
                @*if (Convert.ToBoolean(Model.User.IsExternalAccount))
                {
                    <p>@Html.LanguageString("Members.Profile.IsSocialAccount")</p>    
                }*@

                // If this is an admins profile then do not show
                if (!Model.User.Roles.Any(x => x.RoleName.Contains(AppConstants.AdminRoleName)))
                {
                    <div class="memberprofileadminsection">
                        @Html.Partial("AdminMemberProfileTools")
                    </div>
                }
            }
        </div>

        <div class="col-md-9 membermaindetails">

            <div class="row">
                <div class="col-md-6 memberbio">

                    <p>@Html.LanguageString("Members.Profile.Country") @Html.Raw(string.IsNullOrEmpty(Model.User.Profiles.First().Country) ? "" : Model.User.Profiles.First().Country)</p>
                    <p>@Html.LanguageString("Members.Profile.State") @Html.Raw(string.IsNullOrEmpty(Model.User.Profiles.First().State) ? "" : Model.User.Profiles.First().State)</p>
                    <p>@Html.LanguageString("Members.Profile.City") @Html.Raw(string.IsNullOrEmpty(Model.User.Profiles.First().City) ? "" : Model.User.Profiles.First().City)</p>
                    <p>@Html.LanguageString("Members.Profile.Address") @Html.Raw(string.IsNullOrEmpty(Model.User.Profiles.First().Address) ? "" : Model.User.Profiles.First().Address)</p>
                </div>

                <div class="col-md-6 memberlatesttopics">
                    <h3>@Html.LanguageString("Members.Profile.DiscussionActivity")</h3>
                    <div class="memberdiscussions">
                        <span class="ajaxspinner" title="@Html.LanguageString("Ajax.PleaseWait")">@Html.LanguageString("Ajax.PleaseWait")</span>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12 badgeactivity">
                    <h3>@Html.LanguageString("Members.Profile.Badges")</h3>
                    <div class="memberactivity">
                        @if (Model.User.Badges != null && Model.User.Badges.Any())
                        {
                            <ul class="memberbadgelist">
                                @foreach (var badge in Model.User.Badges)
                                {
                                    <li>
                                        <img src="@Url.Content(AppHelpers.ReturnBadgeUrl(badge.Image))" alt="@badge.Name" title="@badge.Name"/>
                                        @Html.Raw(badge.DisplayName)
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                </div>
            </div>

            @if (User.IsInRole(AppConstants.AdminRoleName) || User.IsInRole(AppConstants.ModeratorRoleName))
            { 
                // Show the admin/mod notes on this user in case they are a spammer etc...
                <div class="row adminpublicomments">
                    <div class="col-md-12">
                        @Html.Raw(Model.User.Comment)
                    </div>
                </div>   
            }

        </div>

    </div>

</div>

@model digioz.Portal.Domain.DomainModel.Product

@{
    ViewBag.Title = "Delete Product";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Delete Product</h2>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Product</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.ProductCategory.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ProductCategory.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Make)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Make)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Model)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Model)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SKU)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SKU)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Image)
        </dt>

        <dd>
            @if (string.IsNullOrEmpty(Model.Image))
            {
                <img src="~/Content/images/icons/128x128/product_placeholder.jpg" />
            }
            else
            {
                <a href="~/Content/Products/Full/@Model.Image">
                    <img src="~/Content/Products/Thumb/@Model.Image" />
                </a>
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Price)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Price)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Cost)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Cost)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.QuantityPerUnit)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.QuantityPerUnit)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Weight)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Weight)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Dimensions)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Dimensions)
        </dd>

        <dt>
            Sizes
        </dt>

        <dd>
            <ul>
                @foreach (var item in ViewBag.Sizes)
                {
                    <li>@item.OptionValue</li>
                }
            </ul>
        </dd>

        <dt>
            Colors
        </dt>

        <dd>
            <ul>
                @foreach (var item in ViewBag.Colors)
                {
                    <li>@item.OptionValue</li>
                }
            </ul>
        </dd>

        <dt>
            Material Type
        </dt>

        <dd>
            <ul>
                @foreach (var item in ViewBag.MaterialTypes)
                {
                    <li>@item.OptionValue</li>
                }
            </ul>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PartNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PartNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ShortDescription)
        </dt>

        <dd>
            @Html.Raw(Model.ShortDescription)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.Raw(Model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ManufacturerURL)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ManufacturerURL)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.UnitsInStock)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UnitsInStock)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.OutOfStock)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OutOfStock)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Notes)
        </dt>

        <dd>
            @Html.Raw(Model.Notes)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Visible)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Visible)
        </dd>
    </dl>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-actions no-color">
            <input type="submit" value="Delete" class="btn btn-default" /> |
            @Html.ActionLink("Back to List", "Index")
        </div>
    }
</div>

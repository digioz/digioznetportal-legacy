@model digioz.Portal.Web.Areas.Admin.ViewModels.MemberEditViewModel
@{
    ViewBag.Title = "Edit";
    var titleText = String.IsNullOrEmpty(Model.Id) ? "Add User" : "Edit User";    
}
@section AdminHeader
{
    @Scripts.Render("~/bundles/jqueryval")
}
@using (Html.BeginForm("Edit", "ForumAccount", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.HiddenFor(x => Model.Id)
    @Html.HiddenFor(x => Model.CreateDate)
    @Html.HiddenFor(x => Model.LastLoginDate)
    @Html.HiddenFor(x => Model.LastPasswordChangedDate)
    @Html.HiddenFor(x => Model.LastLockoutDate)
    @Html.HiddenFor(x => Model.FailedPasswordAttemptCount)
    @Html.HiddenFor(x => Model.FailedPasswordAnswerAttempt)

    @Html.ValidationSummary(false)

    <fieldset>
        <legend>@Html.Raw(titleText)</legend>

        <div class="form-group">
            @Html.LabelFor(x => x.UserName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(x => x.UserName, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.UserName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.PasswordQuestion, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(x => x.PasswordQuestion, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.PasswordQuestion)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.PasswordAnswer, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(x => x.PasswordAnswer, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.PasswordAnswer)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Email)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthdayVisible, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthdayVisible, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BirthdayVisible)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Address)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address2, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Address2, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Address2)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.City, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.City)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.State, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.State)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Zip, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Zip, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Zip)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Country, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Country, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Country)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.Signature, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(x => x.Signature, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Signature)
            </div>
        </div>

        <h2>Admin Specific</h2>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <p><a href="@Url.Action("DeleteUsersPosts", "ForumAccount", new { area = "Admin", id = Model.Id }, null)" onclick="return confirm('Be careful, as soon as you click this all @Model.UserName posts and topics will be deleted')" class="btn">Delete All Members Posts</a></p>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(x => x.DisableEmailNotifications)
                    @Html.LabelFor(x => x.DisableEmailNotifications)
                    @Html.ValidationMessageFor(x => x.DisableEmailNotifications)
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(x => x.DisablePosting)
                    @Html.LabelFor(x => x.DisablePosting)
                    @Html.ValidationMessageFor(x => x.DisablePosting)
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(x => x.DisablePrivateMessages)
                    @Html.LabelFor(x => x.DisablePrivateMessages)
                    @Html.ValidationMessageFor(x => x.DisablePrivateMessages)
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(x => x.DisableFileUploads)
                    @Html.LabelFor(x => x.DisableFileUploads)
                    @Html.ValidationMessageFor(x => x.DisableFileUploads)
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(x => x.IsApproved)
                    @Html.LabelFor(x => x.IsApproved)
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(x => x.IsLockedOut)
                    @Html.LabelFor(x => x.IsLockedOut)
                    @Html.ValidationMessageFor(x => x.IsLockedOut)
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.Comment, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(x => x.Comment, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Comment)
            </div>
        </div>

        @*<div class="editor-label">
                @Html.Label("Roles")
            </div>
            <div class="editor-checkboxes">
                @foreach (var role in @Model.AllRoles)
                {
                    var showChecked = @Model.Roles.Contains(role.RoleName) ? "checked='checked'" : "";
                    if (role.RoleName != AppConstants.GuestRoleName)
                    {
                        <span class="editrolecb"><input type="checkbox" name="Roles" value=@role.RoleName @showChecked /> @Html.Raw(role.RoleName)</span>
                    }
                }
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-large btn-success" value="Save" /> <a href="@Url.Action("Delete", new{Model.Id})" onclick="return confirm('Are you sure you want to delete @Model.UserName?')" class="btn btn-large btn-danger">Delete</a>
            </div>
        </div>
   </fieldset>
}


